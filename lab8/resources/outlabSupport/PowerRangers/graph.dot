digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	8 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="void std::_Construct<Layer, Layer>(Layer*, Layer const&)\n100.00%\n(100.00%)\n127×"];
	9 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Layer* std::__addressof<Layer>(Layer&)\n100.00%\n(100.00%)\n127×"];
	10 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Layer::Layer(double)\n100.00%\n(100.00%)\n119×"];
	11 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<Layer>::construct(Layer*, Layer const&)\n100.00%\n(100.00%)\n119×"];
	12 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="void __gnu_cxx::__alloc_traits<std::allocator<Layer> >::construct<Layer>(std::allocator<Layer>&, Layer*, Layer const&)\n100.00%\n(100.00%)\n119×"];
	12 -> 11 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n119×", labeldistance="4.00", penwidth="4.00"];
	13 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::push_back(Layer const&)\n100.00%\n(100.00%)\n119×"];
	13 -> 12 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n111×", labeldistance="4.00", penwidth="4.00"];
	13 -> 35 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	13 -> 36 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	14 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Limb::updateLength(double)\n100.00%\n(100.00%)\n84×"];
	15 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::size() const\n100.00%\n(100.00%)\n74×"];
	16 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Monster::computeArmLength()\n100.00%\n(100.00%)\n41×"];
	17 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<Layer*, std::vector<Layer, std::allocator<Layer> > >::base() const\n100.00%\n(100.00%)\n32×"];
	18 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<Layer>::max_size() const\n100.00%\n(100.00%)\n24×"];
	19 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Monster::growToSize(int)\n100.00%\n(100.00%)\n21×"];
	19 -> 14 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n84×", labeldistance="4.00", penwidth="4.00"];
	19 -> 16 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n21×", labeldistance="4.00", penwidth="4.00"];
	19 -> 20 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n21×", labeldistance="4.00", penwidth="4.00"];
	19 -> 21 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n21×", labeldistance="4.00", penwidth="4.00"];
	20 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Monster::resizeTorso()\n100.00%\n(100.00%)\n21×"];
	20 -> 10 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n119×", labeldistance="4.00", penwidth="4.00"];
	20 -> 13 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n119×", labeldistance="4.00", penwidth="4.00"];
	20 -> 15 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n42×", labeldistance="4.00", penwidth="4.00"];
	21 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Monster::computeLegLength()\n100.00%\n(100.00%)\n21×"];
	21 -> 22 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n21×", labeldistance="4.00", penwidth="4.00"];
	22 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="double const& std::max<double>(double const&, double const&)\n100.00%\n(100.00%)\n21×"];
	23 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__alloc_traits<std::allocator<Layer> >::max_size(std::allocator<Layer> const&)\n100.00%\n(100.00%)\n16×"];
	23 -> 18 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	24 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<Layer*, std::vector<Layer, std::allocator<Layer> > >::__normal_iterator(Layer* const&)\n100.00%\n(100.00%)\n16×"];
	25 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<Layer, std::allocator<Layer> >::_M_get_Tp_allocator() const\n100.00%\n(100.00%)\n16×"];
	26 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::max_size() const\n100.00%\n(100.00%)\n16×"];
	26 -> 23 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	26 -> 25 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	27 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Layer* std::__uninitialized_copy<false>::__uninit_copy<Layer*, Layer*>(Layer*, Layer*, Layer*)\n100.00%\n(100.00%)\n16×"];
	27 -> 8 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n127×", labeldistance="4.00", penwidth="4.00"];
	27 -> 9 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n127×", labeldistance="4.00", penwidth="4.00"];
	28 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Layer* std::uninitialized_copy<Layer*, Layer*>(Layer*, Layer*, Layer*)\n100.00%\n(100.00%)\n16×"];
	28 -> 27 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	29 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Layer* std::__uninitialized_copy_a<Layer*, Layer*, Layer>(Layer*, Layer*, Layer*, std::allocator<Layer>&)\n100.00%\n(100.00%)\n16×"];
	29 -> 28 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	30 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Layer* std::__uninitialized_move_if_noexcept_a<Layer*, Layer*, std::allocator<Layer> >(Layer*, Layer*, Layer*, std::allocator<Layer>&)\n100.00%\n(100.00%)\n16×"];
	30 -> 29 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	31 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<Layer>::allocate(unsigned long, void const*)\n100.00%\n(100.00%)\n8×"];
	31 -> 18 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	32 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<Layer*, std::vector<Layer, std::allocator<Layer> > >::difference_type __gnu_cxx::operator-<Layer*, std::vector<Layer, std::allocator<Layer> > >(__gnu_cxx::__normal_iterator<Layer*, std::vector<Layer, std::allocator<Layer> > > const&, __gnu_cxx::__normal_iterator<Layer*, std::vector<Layer, std::allocator<Layer> > > const&)\n100.00%\n(100.00%)\n8×"];
	32 -> 17 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	33 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::_M_check_len(unsigned long, char const*) const\n100.00%\n(100.00%)\n8×"];
	33 -> 15 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n32×", labeldistance="4.00", penwidth="4.00"];
	33 -> 26 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	34 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<Layer, std::allocator<Layer> >::_M_allocate(unsigned long)\n100.00%\n(100.00%)\n8×"];
	34 -> 31 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	35 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Layer*, std::vector<Layer, std::allocator<Layer> > >, Layer const&)\n100.00%\n(100.00%)\n8×"];
	35 -> 12 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	35 -> 17 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	35 -> 30 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n16×", labeldistance="4.00", penwidth="4.00"];
	35 -> 32 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	35 -> 33 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	35 -> 34 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	35 -> 37 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	36 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::end()\n100.00%\n(100.00%)\n8×"];
	36 -> 24 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	37 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::begin()\n100.00%\n(100.00%)\n8×"];
	37 -> 24 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n8×", labeldistance="4.00", penwidth="4.00"];
	38 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Limb::Limb()\n100.00%\n(100.00%)\n4×"];
	39 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Leg::construct()\n100.00%\n(100.00%)\n2×"];
	40 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Leg::Leg()\n100.00%\n(100.00%)\n2×"];
	40 -> 38 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	40 -> 39 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	41 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Hand::construct()\n100.00%\n(100.00%)\n2×"];
	42 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Hand::Hand()\n100.00%\n(100.00%)\n2×"];
	42 -> 38 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	42 -> 41 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	43 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="_GLOBAL__sub_I__ZN4Limb12updateLengthEd\n100.00%\n(100.00%)\n1×"];
	43 -> 45 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	44 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="_GLOBAL__sub_I__ZN7MonsterC2Ei\n100.00%\n(100.00%)\n1×"];
	44 -> 46 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	45 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__static_initialization_and_destruction_0(int, int)\n100.00%\n(100.00%)\n1×"];
	46 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__static_initialization_and_destruction_0(int, int)\n100.00%\n(100.00%)\n1×"];
	47 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="Monster::Monster(int)\n100.00%\n(100.00%)\n1×"];
	47 -> 19 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	47 -> 40 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	47 -> 42 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	47 -> 52 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	48 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<Layer>::new_allocator()\n100.00%\n(100.00%)\n1×"];
	49 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::allocator<Layer>::allocator()\n100.00%\n(100.00%)\n1×"];
	49 -> 48 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	50 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<Layer, std::allocator<Layer> >::_Vector_impl::_Vector_impl()\n100.00%\n(100.00%)\n1×"];
	50 -> 49 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	51 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<Layer, std::allocator<Layer> >::_Vector_base()\n100.00%\n(100.00%)\n1×"];
	51 -> 50 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	52 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Layer, std::allocator<Layer> >::vector()\n100.00%\n(100.00%)\n1×"];
	52 -> 51 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
}
